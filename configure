#!/bin/bash

#Main environment variable
if ! grep -q 'MTP' "$HOME/.bashrc"
then
   echo "export MTP='$PWD'" >> $HOME/.bashrc
fi
source $HOME/.bashrc

#Secondary environment variables
source $MTP/init.sh

#Checking for an Ubuntu version
echo ""
echo "###############"
echo "### APT-GET ###"
echo "###############"
sleep 1
gcc --version > tmp.txt
if grep -q 'Ubuntu' 'tmp.txt'
then 
   echo "Ubuntu detected."
   rm tmp.txt
   echo "Installing required utilites ..."
   sudo apt-get -y install wget git bison gcc-multilib g++-multilib gperf libxml2-utils make python-networkx zlib1g-dev zip gnupg flex libpcre++-dev libsdl-dev libesd0-dev libwxgtk2.8-dev build-essential curl libncurses5-dev valgrind libreadline6-dev libc6-dev x11proto-core-dev libx11-dev libz-dev gawk texinfo automake libtool cvs hostapd aircrack-ng wireshark android-tools-adb android-tools-fastboot
else
   echo "Ubuntu not detected. Commands like 'apt-get' included in this script won't work. Run them manually"
   rm tmp.txt
   sleep 2
fi


######################
### ANDROID FOLDER ###
######################

#Clone repositories
echo ""
echo "##########################"
echo "### CLONE REPOSITORIES ###"
echo "##########################"

sudo git submodule init
sudo git submodule update

#TOOLCHAIN (ARM-EABI-4.7)
echo ""
echo "===> Toolchain (arm-eabi-4.7) <==="
#sleep 1
#sudo mkdir -p $ANDROID/toolchain
#cd $ANDROID/toolchain
#sudo git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7/

#ANDROID-IMG-TOOLS
echo ""
echo "===> Android Image Repack Tools <==="
#sleep 1
#sudo mkdir -p $ANDROID/android-img-tools
#while true; do
#   if ! sudo git clone https://github.com/ocervell/android_img_repack_tools.git $ANDROID/android-img-tools
#   then
#      if [ -d "$ANDROID/android-img-tools" ]; then
#     	   echo "Error: Failed fetching repository for android_img_repack_tools.git."
#	   echo ""
#           read -p "Remove old version of android-img-tools and fetch the most recent from distant repository (y/n) ? " yn
#          case $yn in
#           [Yy]* ) echo ""
#		   echo "Removing old android-img-tools ..."
#		   sudo rm -rf $ANDROID/android-img-tools
#		   echo ""
#		   echo "Cloning repository ..."
#  		   sudo git clone https://github.com/ocervell/android_img_repack_tools.git $ANDROID/android-img-tools
#		   break;;		   

#           [Nn]* ) echo ""
#		   echo "Continuing with current directory. Cleaning up build."
#		   cd $ANDROID/android-img-tools
#		   sudo make clear
#		   sudo make clean
#		   break;;
#               * ) echo "Please answer yes or no.";;
#           esac
#      else
#           exit 1
#      fi
#   fi
#done
#sleep 1

#HAMMERHEAD_KERNEL
echo ""
echo "===> Hammerhead Kernel Source <==="
sleep 1
#sudo mkdir -p $ANDROID/kernels/hammerhead
#if ! sudo git clone https://android.googlesource.com/kernel/msm.git $KERNELS/hammerhead
#then
#    echo "Error: Failed fetching repository for msm.git. Try manually"
#    exit 1
#fi

echo ""
echo "===> Hammerhead Kernel Factory Image <==="
sudo mkdir -p $ANDROID/boot-img
cd $ANDROID/boot-img
sudo wget https://dl.google.com/dl/android/aosp/hammerhead-lmy48i-factory-a38c3441.tgz
sudo tar xvzf hammerhead-lmy48i-factory-a38c3441.tgz
sudo chmod 777 hammerhead-lmy48i
sudo unzip hammerhead-lmy48i/image-hammerhead-lmy48i.zip
sudo mv $BOOTIMG/hammerhead-lmy48i/* $BOOTIMG
sudo rm *.sh
sudo rm *.txt
sudo rm *.zip


echo ""
echo "===> Recovery Image (TWRP) <==="
sudo mkdir -p $ANDROID/custom-recovery
cd $ANDROID/custom-recovery
sudo wget https://dl.twrp.me/hammerhead/twrp-2.8.7.1-hammerhead.img

echo ""
echo "#################"
echo "### CONFIGURE ###"
echo "#################"
sleep 1
cd $ANDROID/android-img-tools
sudo git checkout android-5.1.1_r4
sudo ./configure

echo ""
echo "############"
echo "### MAKE ###"
echo "############"
sleep 1
sudo make

echo ""
echo "#######################"
echo "### TROUBLESHOOTING ###"
echo "#######################"
sleep 1
while true; do
    read -p "Any errors during the previous compilation ? (y/n) " yn
    case $yn in
        [Yy]* ) echo "Troubleshooting steps:"
		echo " 1. Open a new terminal (CTRL + ALT + T)"
                echo " 2. cd $ANDROID/android-img-tools"
                echo " 3. sudo make clear"
                echo " 4. sudo make clean"
                echo " 5. sudo ./configure"
                echo " 6. sudo make"
		echo "Note: If you still have errors, check if something went wrong with the apt-get installs and reinstall the broken tools manually"
                continue;;
        [Nn]* ) break;;
            * ) echo "Please answer yes or no.";;
    esac
done

echo ""
echo "Done. Script exited successfully."


#Enable ath9k_htc modules (driver + debugging) to config file
